<<<<<<< HEAD
categoric_val_idx = seq(dim(df)[2])[-c(1,numeric_val_idx)]
categoric_val = names(df)[categoric_val_idx]
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
=======
>>>>>>> 0a12194b20d489a9ab9923017e685a9d22d2a62b
str(df)
summary(df)
# Chunk 4
<<<<<<< HEAD
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val_idx = which(sapply(df, is.numeric))
numeric_val = names(df)[numeric_val_idx]
# So the remaining will be categorical features.
categoric_val_idx = which(sapply(df, is.factor))
categoric_val = names(df)[categoric_val_idx]
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
load("Elections_92.RData")
setwd("~/Uni/UPC/1rSemestre/SIM/4. Binary Response Data/Lab")
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
load("Elections_92.RData")
options(contrasts=c("contr.treatment","contr.treatment"))
library(car)
library(MASS)
library(AER)
library(effects)
library(lmtest)
library(FactoMineR)
library(DescTools)
library(ResourceSelection)
library(statmod)
library(cvAUC)
# Feature Selection
summary(elecc92)
catdes(elecc92[,-1],9)
?catdes
hist(df$tenure)
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
hist(df$tenure)
setwd("~/GitHub/SIM-Project_2")
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary(df)
# Chunk 4
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary(df)
# Chunk 4
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# Chunk 5
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val_idx = which(sapply(df, is.numeric))
numeric_val = names(df)[numeric_val_idx]
# So the remaining will be categorical features.
categoric_val_idx = which(sapply(df, is.factor))
categoric_val = names(df)[categoric_val_idx]
hist(df$tenure)
replace(df$c.tenure <= m.tenure/4, m.tenure/4)
replace(df$c.tenure, df$c.tenure <= m.tenure/4, m.tenure/4)
m.tenure <- max(df$tenure)
replace(df$c.tenure, df$c.tenure <= m.tenure/4, m.tenure/4)
df$c.tenure <= m.tenure/4
m.tenure
m.tenure/4
# !!!!!!!!!!!!!!!!!!!!!!!!!! TO DO !!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Create 4 levels for each variable and call them c.tenure, c.TotalCharges,
# c.MonthlyCharges. Define levels as semiopen intervals, where left bound
# doesn't include the minimum of the class
df$c.tenure <- df$tenure
m.tenure <- max(df$tenure)
replace(df$c.tenure, df$tenure <= m.tenure/4, m.tenure/4)
?replace
hist(df$c.tenure)
df$c.tenure <- replace(df$c.tenure, df$tenure <= m.tenure/4, m.tenure/4)
hist(df$c.tenure)
df$c.tenure[m.tenure/4 < df$tenure <= m.tenure/2] <- m.tenure/2
df$c.tenure <- replace(df$c.tenure, m.tenure/4 < df$tenure <= m.tenure/2, m.tenure/2)
df$c.tenure[(m.tenure/4 < df$tenure) || (df$tenure <= m.tenure/2)] <- m.tenure/2
df$c.tenure[which((m.tenure/4 < df$tenure) || (df$tenure <= m.tenure/2))] <- m.tenure/2
df$c.tenure[which((m.tenure/4 < df$tenure) || (df$tenure <= m.tenure/2)),1] <- m.tenure/2
df$c.tenure[which((m.tenure/4 < df$tenure) || (df$tenure <= m.tenure/2)),] <- m.tenure/2
which((m.tenure/4 < df$tenure) || (df$tenure <= m.tenure/2))
which((m.tenure/4 < df$tenure) && (df$tenure <= m.tenure/2))
(m.tenure/4 < df$tenure) && (df$tenure <= m.tenure/2)
(m.tenure/4 < df$tenure)
(df$tenure <= m.tenure/2)
(m.tenure/4 < df$tenure) && (df$tenure <= m.tenure/2)
in(df$tenure, m.tenure/4, m.tenure/2)
which(m.tenure/4 < df$tenure <= m.tenure/2)
1 <2<3
(1<2)&&(2<3)
df$c.tenure <- replace(with(df$c.tenure, (m.tenure/4 < tenure) &&
(tenure <= m.tenure/2)))
df$c.tenure <- replace(df$c.tenure, with(df$c.tenure, (m.tenure/4 < tenure) &&
(tenure <= m.tenure/2)), m.tenure/2)
with(df$c.tenure, (m.tenure/4 < tenure) &&
(tenure <= m.tenure/2))
with(df, (m.tenure/4 < tenure) &&
(tenure <= m.tenure/2))
with(df$c.tenure, (m.tenure/4 < tenure) &
(tenure <= m.tenure/2))
with(df, (m.tenure/4 < tenure) &
(tenure <= m.tenure/2))
df$c.tenure[which((m.tenure/4 < df$tenure) & (df$tenure <= m.tenure/2)),] <- m.tenure/2
which((m.tenure/4 < df$tenure) & (df$tenure <= m.tenure/2))
df$c.tenure[which((m.tenure/4 < df$tenure) & (df$tenure <= m.tenure/2)),]
df$c.tenure <- replace(df$c.tenure, (m.tenure/4 < df$tenure) & (df$tenure <= m.tenure/2), m.tenure/2)
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary(df)
# Chunk 4
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# Chunk 5
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val_idx = which(sapply(df, is.numeric))
numeric_val = names(df)[numeric_val_idx]
# So the remaining will be categorical features.
categoric_val_idx = which(sapply(df, is.factor))
categoric_val = names(df)[categoric_val_idx]
df$c.tenure <- replace(df$c.tenure, with(df$c.tenure, (m.tenure/4 < tenure) &
(tenure <= m.tenure/2)), m.tenure/2)
m.tenure <- max(df$tenure)
df$c.tenure <- replace(df$c.tenure, with(df, (m.tenure/4 < tenure) &
(tenure <= m.tenure/2)), m.tenure/2)
hist(df$c.tenure)
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary(df)
# Chunk 4
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# Chunk 5
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val_idx = which(sapply(df, is.numeric))
numeric_val = names(df)[numeric_val_idx]
# So the remaining will be categorical features.
categoric_val_idx = which(sapply(df, is.factor))
categoric_val = names(df)[categoric_val_idx]
# !!!!!!!!!!!!!!!!!!!!!!!!!! TO DO !!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Create 4 levels for each variable and call them c.tenure, c.TotalCharges,
# c.MonthlyCharges. Define levels as semiopen intervals, where left bound
# doesn't include the minimum of the class
df$c.tenure <- df$tenure
m.tenure <- max(df$tenure)
df$c.tenure <- replace(df$c.tenure, with(df, (m.tenure/4 < tenure) &
(tenure <= m.tenure/2)), m.tenure/2)
hist(df$c.tenure)
df$c.tenure <- replace(df$c.tenure, df$tenure <= m.tenure/4, m.tenure/4)
hist(df$c.tenure)
# !!!!!!!!!!!!!!!!!!!!!!!!!! TO DO !!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Create 4 levels for each variable and call them c.tenure, c.TotalCharges,
# c.MonthlyCharges. Define levels as semiopen intervals, where left bound
# doesn't include the minimum of the class
summary(df$tenure)
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary(df)
# Chunk 4
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# Chunk 5
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val_idx = which(sapply(df, is.numeric))
numeric_val = names(df)[numeric_val_idx]
# So the remaining will be categorical features.
categoric_val_idx = which(sapply(df, is.factor))
categoric_val = names(df)[categoric_val_idx]
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
hist(df$tenure)
hist(df$TotalCharges)
hist(df$MonthlyCharges)
# !!!!!!!!!!!!!!!!!!!!!!!!!! TO DO !!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Create 4 levels for each variable and call them c.tenure, c.TotalCharges,
# c.MonthlyCharges. Define levels as semiopen intervals, where left bound
# doesn't include the minimum of the class
summary(df$tenure)
df$c.tenure <- df$tenure
m.tenure <- max(df$tenure)
df$c.tenure <- replace(df$c.tenure, df$tenure <= m.tenure/4, m.tenure/4)
for (i in 1:3) {
df$c.tenure <- replace(df$c.tenure, (m.tenure*i/4 < df$tenure) & (df$tenure <= m.tenure*(i+1)/4), m.tenure*(i+1)/4)
}
hist(df$c.tenure)
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary(df)
# Chunk 4
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# Chunk 5
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val_idx = which(sapply(df, is.numeric))
numeric_val = names(df)[numeric_val_idx]
# So the remaining will be categorical features.
categoric_val_idx = which(sapply(df, is.factor))
categoric_val = names(df)[categoric_val_idx]
hist(df$tenure)
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
hist(df$tenure)
hist(df$TotalCharges)
hist(df$MonthlyCharges)
# !!!!!!!!!!!!!!!!!!!!!!!!!! TO DO !!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Create 4 levels for each variable and call them c.tenure, c.TotalCharges,
# c.MonthlyCharges. Define levels as semiopen intervals, where left bound
# doesn't include the minimum of the class
summary(df$tenure)
df$c.tenure <- df$tenure
m.tenure <- max(df$tenure)
df$c.tenure <- replace(df$c.tenure, df$tenure <= m.tenure/4, m.tenure/4)
for (i in 1:3) {
df$c.tenure <- replace(df$c.tenure, (m.tenure*i/4 < df$tenure) & (df$tenure <= m.tenure*(i+1)/4), m.tenure*(i+1)/4)
}
hist(df$c.tenure)
m.tenure/4
m.tenure/2
setwd("~/Uni/UPC/1rSemestre/SIM/4. Binary Response Data/Lab")
# Chunk 1
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
load("Elections_92.RData")
options(contrasts=c("contr.treatment","contr.treatment"))
library(car)
library(MASS)
library(AER)
library(effects)
library(lmtest)
library(FactoMineR)
library(DescTools)
library(ResourceSelection)
library(statmod)
library(cvAUC)
# Chunk 2
# Feature Selection
summary(elecc92)
catdes(elecc92[,-1],9)
# Chunk 3
m1 <- glm(pres~age,data=elecc92,family=binomial)
summary(m1)
residualPlots(m1)
marginalModelPlots(m1)
# Manual diagnostic plot using dfage aggregated dataset
#
par(mfrow=c(1,1))
elecc92$olog <- log((elecc92$pres+0.05)/(1-elecc92$pres+0.05))
plot(elecc92$age,elecc92$olog,pch=19,col="grey70")
lines(lowess(elecc92$age,elecc92$olog,f=0.5),col="blue",lwd=2)
lines(elecc92$age,m1$linear.predictor,col="red",lwd=2)
setwd("~/GitHub/SIM-Project_2")
m.tenure*3/4
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary(df)
# Chunk 4
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# Chunk 5
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val_idx = which(sapply(df, is.numeric))
numeric_val = names(df)[numeric_val_idx]
# So the remaining will be categorical features.
categoric_val_idx = which(sapply(df, is.factor))
categoric_val = names(df)[categoric_val_idx]
hist(df$tenure)
hist(df$TotalCharges)
hist(df$MonthlyCharges)
# !!!!!!!!!!!!!!!!!!!!!!!!!! TO DO !!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Create 4 levels for each variable and call them c.tenure, c.TotalCharges,
# c.MonthlyCharges. Define levels as semiopen intervals, where left bound
# doesn't include the minimum of the class
summary(df$tenure)
df$c.tenure <- df$tenure
m.tenure <- max(df$tenure)
df$c.tenure <- replace(df$c.tenure, df$tenure <= m.tenure/4, m.tenure/4)
for (i in 1:3) {
df$c.tenure <- replace(df$c.tenure, (m.tenure*i/4 < df$tenure) & (df$tenure <= m.tenure*(i+1)/4), m.tenure*(i+1)/4)
}
hist(df$c.tenure)
m.tenure*3/4
m.tenure
df$c.tenure <- factor(df$c.tenure, labels = c("(-1,18]", "(18,36]",
"(36,54]", "(54,72]"))
summary(df$c.tenure)
summary(df$c.tenure)
summary(df$c.tenure)
summary(df$tenure)
summary(df$c.tenure)
hist(df$c.tenure)
summary(df$c.tenure)
par(mfrow=c(1,2))
hist(df$c.tenure)
hist(df$tenure)
par(mfrow=c(1,2))
plot(df$c.tenure)
hist(df$tenure)
plot(df$c.tenure, main = "Barplot of df$c.tenure")
hist(df$tenure)
hist(df$tenure, freq = FALSE)
plot(df$c.tenure, main = "Barplot of df$c.tenure", freq = FALSE)
hist(df$tenure, freq = FALSE)
par(mfrow=c(1,2))
plot(df$c.tenure, main = "Barplot of df$c.tenure", freq = FALSE)
hist(df$tenure, freq = FALSE)
hist(df$tenure, freq = FALSE)
=======
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
categoric_val = categoric_val[-c(1,numeric_val)]
# Chunk 5
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
hist(df$TotalCharges)
hist(df$MonthlyCharges)
# Chunk 6
# Chunk 7
par(mfrow=c(1,2))
hist(df$tenure, prob = TRUE, breaks = 10, main = 'Histogram of tenure
vs normal distribution', xlab = 'tenure')
x <- seq(min(df$tenure), max(df$tenure), by = .1)
y <- dnorm(x, mean = mean(df$tenure), sd = sd(df$tenure))
plot(x,y, xlab = 'tenuere', ylab = '')
hist(df$TotalCharges, prob = TRUE, breaks = 10, main = 'Hist totalCharges
vs normal distribution', xlab = 'TotalCharges')
x <- seq(min(df$TotalCharges, na.rm = TRUE), max(df$TotalCharges, na.rm = TRUE),
by = 10)
y <- dnorm(x, mean = mean(df$TotalCharges, na.rm = TRUE), sd = sd(df$TotalCharges, na.rm = TRUE))
plot(x,y, xlab = 'TotalCharges', ylab = '')
hist(df$MonthlyCharges, prob = TRUE, breaks = 10, main = 'Hist MonthlyCharges
vs normal distribution', xlab = 'df$MonthlyCharges')
x <- seq(min(df$MonthlyCharges, na.rm = TRUE), max(df$MonthlyCharges, na.rm = TRUE),
by = .1)
y <- dnorm(x, mean = mean(df$MonthlyCharges, na.rm = TRUE), sd = sd(df$MonthlyCharges, na.rm = TRUE))
plot(x,y, xlab = 'df$MonthlyCharges', ylab = '')
par(mfrow=c(1,1))
# Chunk 8
# EDA for each variable (numeric and graphic)
summary(df)
id_num_val = c(6, 19, 20)
severe_outliers <- function(data) {
ss <- summary(data)
# Upper/lower severe thresholds
utso <- as.numeric(ss[5]+3*(ss[5]-ss[2]))
ltso <- as.numeric(ss[2]-3*(ss[5]-ss[2]))
return (which((data>utso)|(data<ltso)))
}
# Set them to NA'n and visualize them
for (var in id_num_val) {
out = severe_outliers(df[,var])
print(out)
df[severe_outliers(df[,var]),var] <- NA
Boxplot(df[,var], ylab = names(df)[var], main = "Train")
}
# Chunk 9
severe_outliers(df[,6])
# Chunk 10
# Distribution of missings in df
apply(sapply(df, is.na), 2, sum)
# Only TotalCharges has missings values, 11 in total.
# Chunk 11
# We can check if there is any inconsistency in total charges.
# First, let's compute the expected total charges as the product of monthly
# charges and tenure
expected_total_charges = df$MonthlyCharges * df$tenure
# Then plot them against the actual total charges
plot(expected_total_charges, df$TotalCharges)
# There are no outliers.
# Chunk 12
id_num_val = c(6, 19, 20)
for (var in id_num_val) {
Boxplot(df[,var], ylab = names(df)[var], main = "Boxplot of %names(df)[var])" }
>>>>>>> 0a12194b20d489a9ab9923017e685a9d22d2a62b
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
<<<<<<< HEAD
=======
library(car)
>>>>>>> 0a12194b20d489a9ab9923017e685a9d22d2a62b
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
<<<<<<< HEAD
summary(df)
# Chunk 4
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# Chunk 5
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val_idx = which(sapply(df, is.numeric))
numeric_val = names(df)[numeric_val_idx]
# So the remaining will be categorical features.
categoric_val_idx = which(sapply(df, is.factor))
categoric_val = names(df)[categoric_val_idx]
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
hist(df$tenure, freq = FALSE)
hist(df$TotalCharges, freq = FALSE)
hist(df$MonthlyCharges, freq = FALSE)
# !!!!!!!!!!!!!!!!!!!!!!!!!! TO DO !!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Create 4 levels for each variable and call them c.tenure, c.TotalCharges,
# c.MonthlyCharges. Define levels as semiopen intervals, where left bound
# doesn't include the minimum of the class
df$c.tenure <- df$tenure
m.tenure <- max(df$tenure)
df$c.tenure <- replace(df$c.tenure, df$tenure <= m.tenure/4, m.tenure/4)
for (i in 1:3) {
df$c.tenure <- replace(df$c.tenure, (m.tenure*i/4 < df$tenure) & (df$tenure <= m.tenure*(i+1)/4), m.tenure*(i+1)/4)
}
df$c.tenure <- factor(df$c.tenure, labels = c("(-1,18]", "(18,36]",
"(36,54]", "(54,72]"))
summary(df$c.tenure)
par(mfrow=c(1,2))
plot(df$c.tenure, main = "Barplot of df$c.tenure", freq = FALSE)
hist(df$tenure, freq = FALSE)
barplot(df$c.tenure, main = "Barplot of df$c.tenure", freq = FALSE)
barplot(df$c.tenure, main = "Barplot of df$c.tenure", freq = FALSE)
?barplot
plot(df$c.tenure, main = "Barplot of df$c.tenure", freq = FALSE)
par(mfrow=c(1,2))
plot(df$c.tenure, main = "Barplot of df$c.tenure")
hist(df$tenure)
df$c.TotalCharges <- df$TotalCharges
m.TotalCharges <- max(df$TotalCharges)
df$c.TotalCharges <- replace(df$c.TotalCharges, df$TotalCharges <= m.TotalCharges/4, m.TotalCharges/4)
for (i in 1:3) {
df$c.TotalCharges <- replace(df$c.TotalCharges, (m.TotalCharges*i/4 < df$TotalCharges) & (df$TotalCharges <= m.TotalCharges*(i+1)/4), m.TotalCharges*(i+1)/4)
}
df$c.TotalCharges <- factor(df$c.TotalCharges, labels = c("(-1,18]", "(18,36]",
"(36,54]", "(54,72]"))
m.TotalCharges
m.TotalCharges <- max(df$TotalCharges)
m.TotalCharges <- max(df$TotalCharges)
m.TotalCharges
summary(df$TotalCharges)
df$c.TotalCharges <- df$TotalCharges
m.TotalCharges <- summary(df$TotalCharges)[6]
df$c.TotalCharges <- replace(df$c.TotalCharges, df$TotalCharges <= m.TotalCharges/4, m.TotalCharges/4)
for (i in 1:3) {
df$c.TotalCharges <- replace(df$c.TotalCharges, (m.TotalCharges*i/4 < df$TotalCharges) & (df$TotalCharges <= m.TotalCharges*(i+1)/4), m.TotalCharges*(i+1)/4)
}
df$c.TotalCharges <- factor(df$c.TotalCharges, labels = c("(-1,18]", "(18,36]",
"(36,54]", "(54,72]"))
summary(df$c.TotalCharges)
par(mfrow=c(1,2))
plot(df$c.TotalCharges, main = "Barplot of df$c.tenure")
hist(df$TotalCharges)
plot(df$c.TotalCharges, main = "Barplot of df$c.TotalCharges")
hist(df$TotalCharges)
m.TotalCharges
m.TotalCharges/4
m.TotalCharges*3/4
m.TotalCharges/2
m.TotalCharges/4
breakpts = seq(m.tenure/4, m.tenure, m.tenure/4)
breakpts
breakpts = seq(m.TotalCharges/4, m.TotalCharges, m.TotalCharges/4)
breakpts = seq(m.TotalCharges/4, m.TotalCharges, m.TotalCharges/4); breakpts
summary(df$TotalCharges)[1]
summary(df$tenure)[1]
summary(df$c.TotalCharges)
df$c.MonthlyCharges <- df$MonthlyCharges
m.MonthlyCharges <- summary(df$MonthlyCharges)[6]
df$c.MonthlyCharges <- replace(df$c.MonthlyCharges, df$MonthlyCharges <= m.MonthlyCharges/4, m.MonthlyCharges/4)
for (i in 1:3) {
df$c.MonthlyCharges <- replace(df$c.MonthlyCharges, (m.MonthlyCharges*i/4 < df$MonthlyCharges) & (df$MonthlyCharges <= m.MonthlyCharges*(i+1)/4), m.MonthlyCharges*(i+1)/4)
}
summary(df$MonthlyCharges)[1]
breakpts <- seq(m.MonthlyCharges/4, m.MonthlyCharges, m.MonthlyCharges/4)
breakpts
df$c.MonthlyCharges <- factor(df$c.MonthlyCharges, labels = c("(18,30.69]",
"(30.69,59.38]",
"(59.38,89.06]",
"(89.06,118.75]"))
summary(df$c.MonthlyCharges)
par(mfrow=c(1,2))
plot(df$c.MonthlyCharges, main = "Barplot of df$c.MonthlyCharges")
hist(df$MonthlyCharges)
=======
summary (df)
# Chunk 4
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
categoric_val = categoric_val[-c(1,numeric_val)]
# Chunk 5
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
hist(df$TotalCharges)
hist(df$MonthlyCharges)
# Chunk 6
# Chunk 7
par(mfrow=c(1,2))
hist(df$tenure, prob = TRUE, breaks = 10, main = 'Histogram of tenure
vs normal distribution', xlab = 'tenure')
x <- seq(min(df$tenure), max(df$tenure), by = .1)
y <- dnorm(x, mean = mean(df$tenure), sd = sd(df$tenure))
plot(x,y, xlab = 'tenuere', ylab = '')
hist(df$TotalCharges, prob = TRUE, breaks = 10, main = 'Hist totalCharges
vs normal distribution', xlab = 'TotalCharges')
x <- seq(min(df$TotalCharges, na.rm = TRUE), max(df$TotalCharges, na.rm = TRUE),
by = 10)
y <- dnorm(x, mean = mean(df$TotalCharges, na.rm = TRUE), sd = sd(df$TotalCharges, na.rm = TRUE))
plot(x,y, xlab = 'TotalCharges', ylab = '')
hist(df$MonthlyCharges, prob = TRUE, breaks = 10, main = 'Hist MonthlyCharges
vs normal distribution', xlab = 'df$MonthlyCharges')
x <- seq(min(df$MonthlyCharges, na.rm = TRUE), max(df$MonthlyCharges, na.rm = TRUE),
by = .1)
y <- dnorm(x, mean = mean(df$MonthlyCharges, na.rm = TRUE), sd = sd(df$MonthlyCharges, na.rm = TRUE))
plot(x,y, xlab = 'df$MonthlyCharges', ylab = '')
par(mfrow=c(1,1))
# Chunk 8
# EDA for each variable (numeric and graphic)
summary(df)
id_num_val = c(6, 19, 20)
severe_outliers <- function(data) {
ss <- summary(data)
# Upper/lower severe thresholds
utso <- as.numeric(ss[5]+3*(ss[5]-ss[2]))
ltso <- as.numeric(ss[2]-3*(ss[5]-ss[2]))
return (which((data>utso)|(data<ltso)))
}
# Set them to NA'n and visualize them
for (var in id_num_val) {
out = severe_outliers(df[,var])
print(out)
df[severe_outliers(df[,var]),var] <- NA
Boxplot(df[,var], ylab = names(df)[var], main = "Train")
}
# Chunk 9
severe_outliers(df[,6])
# Chunk 10
# Distribution of missings in df
apply(sapply(df, is.na), 2, sum)
# Only TotalCharges has missings values, 11 in total.
# Chunk 11
# We can check if there is any inconsistency in total charges.
# First, let's compute the expected total charges as the product of monthly
# charges and tenure
expected_total_charges = df$MonthlyCharges * df$tenure
# Then plot them against the actual total charges
plot(expected_total_charges, df$TotalCharges)
# There are no outliers.
# Chunk 12
id_num_val = c(6, 19, 20)
for (var in id_num_val) {
Boxplot(df[,var], ylab = names(df)[var], main = "Boxplot" }
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
library(car)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary (df)
# Chunk 4
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
categoric_val = categoric_val[-c(1,numeric_val)]
# Chunk 5
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
hist(df$TotalCharges)
hist(df$MonthlyCharges)
# Chunk 6
# Chunk 7
par(mfrow=c(1,2))
hist(df$tenure, prob = TRUE, breaks = 10, main = 'Histogram of tenure
vs normal distribution', xlab = 'tenure')
x <- seq(min(df$tenure), max(df$tenure), by = .1)
y <- dnorm(x, mean = mean(df$tenure), sd = sd(df$tenure))
plot(x,y, xlab = 'tenuere', ylab = '')
hist(df$TotalCharges, prob = TRUE, breaks = 10, main = 'Hist totalCharges
vs normal distribution', xlab = 'TotalCharges')
x <- seq(min(df$TotalCharges, na.rm = TRUE), max(df$TotalCharges, na.rm = TRUE),
by = 10)
y <- dnorm(x, mean = mean(df$TotalCharges, na.rm = TRUE), sd = sd(df$TotalCharges, na.rm = TRUE))
plot(x,y, xlab = 'TotalCharges', ylab = '')
hist(df$MonthlyCharges, prob = TRUE, breaks = 10, main = 'Hist MonthlyCharges
vs normal distribution', xlab = 'df$MonthlyCharges')
x <- seq(min(df$MonthlyCharges, na.rm = TRUE), max(df$MonthlyCharges, na.rm = TRUE),
by = .1)
y <- dnorm(x, mean = mean(df$MonthlyCharges, na.rm = TRUE), sd = sd(df$MonthlyCharges, na.rm = TRUE))
plot(x,y, xlab = 'df$MonthlyCharges', ylab = '')
par(mfrow=c(1,1))
# Chunk 8
# EDA for each variable (numeric and graphic)
summary(df)
id_num_val = c(6, 19, 20)
severe_outliers <- function(data) {
ss <- summary(data)
# Upper/lower severe thresholds
utso <- as.numeric(ss[5]+3*(ss[5]-ss[2]))
ltso <- as.numeric(ss[2]-3*(ss[5]-ss[2]))
return (which((data>utso)|(data<ltso)))
}
# Set them to NA'n and visualize them
for (var in id_num_val) {
out = severe_outliers(df[,var])
print(out)
df[severe_outliers(df[,var]),var] <- NA
Boxplot(df[,var], ylab = names(df)[var], main = "Train")
}
# Chunk 9
severe_outliers(df[,6])
# Chunk 10
# Distribution of missings in df
apply(sapply(df, is.na), 2, sum)
# Only TotalCharges has missings values, 11 in total.
# Chunk 11
# We can check if there is any inconsistency in total charges.
# First, let's compute the expected total charges as the product of monthly
# charges and tenure
expected_total_charges = df$MonthlyCharges * df$tenure
# Then plot them against the actual total charges
plot(expected_total_charges, df$TotalCharges)
# There are no outliers.
# Chunk 12
id_num_val = c(6, 19, 20)
for (var in id_num_val) {
Boxplot(df[,var], ylab = names(df)[var], main = "Boxplot")
}
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
library(car)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary (df)
# Chunk 4
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
categoric_val = categoric_val[-c(1,numeric_val)]
# Chunk 5
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
hist(df$TotalCharges)
hist(df$MonthlyCharges)
# Chunk 6
# Chunk 7
par(mfrow=c(1,2))
hist(df$tenure, prob = TRUE, breaks = 10, main = 'Histogram of tenure
vs normal distribution', xlab = 'tenure')
x <- seq(min(df$tenure), max(df$tenure), by = .1)
y <- dnorm(x, mean = mean(df$tenure), sd = sd(df$tenure))
plot(x,y, xlab = 'tenuere', ylab = '')
hist(df$TotalCharges, prob = TRUE, breaks = 10, main = 'Hist totalCharges
vs normal distribution', xlab = 'TotalCharges')
x <- seq(min(df$TotalCharges, na.rm = TRUE), max(df$TotalCharges, na.rm = TRUE),
by = 10)
y <- dnorm(x, mean = mean(df$TotalCharges, na.rm = TRUE), sd = sd(df$TotalCharges, na.rm = TRUE))
plot(x,y, xlab = 'TotalCharges', ylab = '')
hist(df$MonthlyCharges, prob = TRUE, breaks = 10, main = 'Hist MonthlyCharges
vs normal distribution', xlab = 'df$MonthlyCharges')
x <- seq(min(df$MonthlyCharges, na.rm = TRUE), max(df$MonthlyCharges, na.rm = TRUE),
by = .1)
y <- dnorm(x, mean = mean(df$MonthlyCharges, na.rm = TRUE), sd = sd(df$MonthlyCharges, na.rm = TRUE))
plot(x,y, xlab = 'df$MonthlyCharges', ylab = '')
par(mfrow=c(1,1))
# Chunk 8
# EDA for each variable (numeric and graphic)
summary(df)
id_num_val = c(6, 19, 20)
severe_outliers <- function(data) {
ss <- summary(data)
# Upper/lower severe thresholds
utso <- as.numeric(ss[5]+3*(ss[5]-ss[2]))
ltso <- as.numeric(ss[2]-3*(ss[5]-ss[2]))
return (which((data>utso)|(data<ltso)))
}
# Set them to NA'n and visualize them
for (var in id_num_val) {
out = severe_outliers(df[,var])
print(out)
df[severe_outliers(df[,var]),var] <- NA
Boxplot(df[,var], ylab = names(df)[var], main = "Train")
}
# Chunk 9
severe_outliers(df[,6])
# Chunk 10
# Distribution of missings in df
apply(sapply(df, is.na), 2, sum)
# Only TotalCharges has missings values, 11 in total.
# Chunk 11
# We can check if there is any inconsistency in total charges.
# First, let's compute the expected total charges as the product of monthly
# charges and tenure
expected_total_charges = df$MonthlyCharges * df$tenure
# Then plot them against the actual total charges
plot(expected_total_charges, df$TotalCharges)
# There are no outliers.
# Chunk 12
id_num_val = c(6, 19, 20)
for (var in id_num_val) {
Boxplot(df[,var], ylab = names(df)[var], main = "Boxplot of %names(df)[var]")
}
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
library(car)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary (df)
# Chunk 4
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
categoric_val = categoric_val[-c(1,numeric_val)]
# Chunk 5
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
hist(df$TotalCharges)
hist(df$MonthlyCharges)
# Chunk 6
# Chunk 7
par(mfrow=c(1,2))
hist(df$tenure, prob = TRUE, breaks = 10, main = 'Histogram of tenure
vs normal distribution', xlab = 'tenure')
x <- seq(min(df$tenure), max(df$tenure), by = .1)
y <- dnorm(x, mean = mean(df$tenure), sd = sd(df$tenure))
plot(x,y, xlab = 'tenuere', ylab = '')
hist(df$TotalCharges, prob = TRUE, breaks = 10, main = 'Hist totalCharges
vs normal distribution', xlab = 'TotalCharges')
x <- seq(min(df$TotalCharges, na.rm = TRUE), max(df$TotalCharges, na.rm = TRUE),
by = 10)
y <- dnorm(x, mean = mean(df$TotalCharges, na.rm = TRUE), sd = sd(df$TotalCharges, na.rm = TRUE))
plot(x,y, xlab = 'TotalCharges', ylab = '')
hist(df$MonthlyCharges, prob = TRUE, breaks = 10, main = 'Hist MonthlyCharges
vs normal distribution', xlab = 'df$MonthlyCharges')
x <- seq(min(df$MonthlyCharges, na.rm = TRUE), max(df$MonthlyCharges, na.rm = TRUE),
by = .1)
y <- dnorm(x, mean = mean(df$MonthlyCharges, na.rm = TRUE), sd = sd(df$MonthlyCharges, na.rm = TRUE))
plot(x,y, xlab = 'df$MonthlyCharges', ylab = '')
par(mfrow=c(1,1))
# Chunk 8
# EDA for each variable (numeric and graphic)
summary(df)
id_num_val = c(6, 19, 20)
severe_outliers <- function(data) {
ss <- summary(data)
# Upper/lower severe thresholds
utso <- as.numeric(ss[5]+3*(ss[5]-ss[2]))
ltso <- as.numeric(ss[2]-3*(ss[5]-ss[2]))
return (which((data>utso)|(data<ltso)))
}
# Set them to NA'n and visualize them
for (var in id_num_val) {
out = severe_outliers(df[,var])
print(out)
df[severe_outliers(df[,var]),var] <- NA
Boxplot(df[,var], ylab = names(df)[var], main = "Train")
}
# Chunk 9
severe_outliers(df[,6])
# Chunk 10
# Distribution of missings in df
apply(sapply(df, is.na), 2, sum)
# Only TotalCharges has missings values, 11 in total.
# Chunk 11
# We can check if there is any inconsistency in total charges.
# First, let's compute the expected total charges as the product of monthly
# charges and tenure
expected_total_charges = df$MonthlyCharges * df$tenure
# Then plot them against the actual total charges
plot(expected_total_charges, df$TotalCharges)
# There are no outliers.
# Chunk 12
id_num_val = c(6, 19, 20)
for (var in id_num_val) {
Boxplot(df[,var], ylab = names(df)[var], main = "Boxplot")
}
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
library(car)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary (df)
# Chunk 4
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
categoric_val = categoric_val[-c(1,numeric_val)]
# Chunk 5
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
hist(df$TotalCharges)
hist(df$MonthlyCharges)
# Chunk 6
# Chunk 7
par(mfrow=c(1,2))
hist(df$tenure, prob = TRUE, breaks = 10, main = 'Histogram of tenure
vs normal distribution', xlab = 'tenure')
x <- seq(min(df$tenure), max(df$tenure), by = .1)
y <- dnorm(x, mean = mean(df$tenure), sd = sd(df$tenure))
plot(x,y, xlab = 'tenuere', ylab = '')
hist(df$TotalCharges, prob = TRUE, breaks = 10, main = 'Hist totalCharges
vs normal distribution', xlab = 'TotalCharges')
x <- seq(min(df$TotalCharges, na.rm = TRUE), max(df$TotalCharges, na.rm = TRUE),
by = 10)
y <- dnorm(x, mean = mean(df$TotalCharges, na.rm = TRUE), sd = sd(df$TotalCharges, na.rm = TRUE))
plot(x,y, xlab = 'TotalCharges', ylab = '')
hist(df$MonthlyCharges, prob = TRUE, breaks = 10, main = 'Hist MonthlyCharges
vs normal distribution', xlab = 'df$MonthlyCharges')
x <- seq(min(df$MonthlyCharges, na.rm = TRUE), max(df$MonthlyCharges, na.rm = TRUE),
by = .1)
y <- dnorm(x, mean = mean(df$MonthlyCharges, na.rm = TRUE), sd = sd(df$MonthlyCharges, na.rm = TRUE))
plot(x,y, xlab = 'df$MonthlyCharges', ylab = '')
par(mfrow=c(1,1))
# Chunk 8
# EDA for each variable (numeric and graphic)
summary(df)
# The distribution
create_report(df, output_file = "Telco.html")
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
library(car)
library(smartEDA)
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
library(car)
library(DataExplorer)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary (df)
# Chunk 4
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
categoric_val = categoric_val[-c(1,numeric_val)]
# Chunk 5
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
hist(df$TotalCharges)
hist(df$MonthlyCharges)
# Chunk 6
par(mfrow=c(1,2))
hist(df$tenure, prob = TRUE, breaks = 10, main = 'Histogram of tenure
vs normal distribution', xlab = 'tenure')
x <- seq(min(df$tenure), max(df$tenure), by = .1)
y <- dnorm(x, mean = mean(df$tenure), sd = sd(df$tenure))
plot(x,y, xlab = 'tenuere', ylab = '')
hist(df$TotalCharges, prob = TRUE, breaks = 10, main = 'Hist totalCharges
vs normal distribution', xlab = 'TotalCharges')
x <- seq(min(df$TotalCharges, na.rm = TRUE), max(df$TotalCharges, na.rm = TRUE),
by = 10)
y <- dnorm(x, mean = mean(df$TotalCharges, na.rm = TRUE), sd = sd(df$TotalCharges, na.rm = TRUE))
plot(x,y, xlab = 'TotalCharges', ylab = '')
hist(df$MonthlyCharges, prob = TRUE, breaks = 10, main = 'Hist MonthlyCharges
vs normal distribution', xlab = 'df$MonthlyCharges')
x <- seq(min(df$MonthlyCharges, na.rm = TRUE), max(df$MonthlyCharges, na.rm = TRUE),
by = .1)
y <- dnorm(x, mean = mean(df$MonthlyCharges, na.rm = TRUE), sd = sd(df$MonthlyCharges, na.rm = TRUE))
plot(x,y, xlab = 'df$MonthlyCharges', ylab = '')
par(mfrow=c(1,1))
# Chunk 7
# EDA for each variable (numeric and graphic)
summary(df)
# The distribution
create_report(df, output_file = "Telco.html")
>>>>>>> 0a12194b20d489a9ab9923017e685a9d22d2a62b

seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor, cex=0.6)
c<-c+1
}
legend("bottomleft",names(data)[dcat],pch=1,col=colors, cex=0.6)
plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-2.5,2), ylim = c(-.7,.7),
xlab = "# Family members", ylab = "PC3", main =
"Modalities on Factorial plane of PC2 and PC3")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories
c <- 1
for(k in dcat){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor, cex=0.6)
c<-c+1
}
legend("bottomleft",names(data)[dcat],pch=1,col=colors, cex=0.6)
# Select only 4 components
nd = 4
Psi = pc1$x[,1:nd]
# STORAGE OF LABELS FOR INDIVIDUALS AND VARIABLES
iden = row.names(dcon)
etiq = names(dcon)
ze = rep(0,length(etiq)) # WE WILL NEED THIS VECTOR AFTERWARDS FOR THE GRAPHICS
# PLOT OF INDIVIDUALS
#Select the component to be plot on our axis
eje1<-1
eje2<-2
# Here is were we create the shadows
plot(Psi[,eje1],Psi[,eje2], type="n")
text(Psi[,eje1],Psi[,eje2],labels=iden, cex=0.5)
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Projection of variables
# Correlation between original variables and the principal components
Phi = cor(dcon,Psi)
#select our axes
X<-Phi[,eje1]
Y<-Phi[,eje2]
plot(Psi[,eje1],Psi[,eje2],type="n")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(0.94,0.96), ylim = c(0.02, 0.05),
xlab = "Economic stability", ylab='# Family members', main =
"Numerical Variables on Factorial plane of PC1 and PC2")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(0.94,0.96), ylim = c(0.02, 0.05),
xlab = "Economic stability", ylab='# Family members', main =
"Price and credit on Factorial plane of PC1 and PC2")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]
barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)")
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)")
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2])
text(x,y+2,labels=as.character(y))
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)")
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2])
text(barplot_x,barplot_y+2,labels=as.character(y))
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)")
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2])
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)")
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = 40)
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = (0,40)
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,40))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,40))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- NULL
barplot_y <- NULL
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,110))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,110))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Accumulated inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,110))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
```{r}
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Accumulated inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,110))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
abline(80,0, col = "blue", lwd = 2, lty = 2)
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Accumulated inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Accumulated inertia (%)", ylim = c(0,110))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
abline(80,0, col = "blue", lwd = 2, lty = 2)
install.packages(c("htmlTable", "knitr", "RcppArmadillo", "sampling", "withr"))
x <- seq(0, 10)
x
x2 <- seq(1,10, 0.5)
x2
t(x)
t(t(x))
ls()
aggregate(x, by=ls(seq(1,10,2)), FUN="mean")
ls(x)
aggregate(x, by=ls(), FUN="mean")
aggregate(x, by=seq(1,10,2), FUN="mean")
aggregate(x, by=c(1,2), FUN="mean")
data(karate, package="igraphdata")
install.packages(igraphdata)
install.packages("igraphdata")
data(karate, package="igraphdata")
wc <- walktrap.community(karate)
install.packages("clustAnalytics")
library(clustAnalytics)
wc <- walktrap.community(karate)
mod <- modularity(wc)
mod
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
library(car)
library(DataExplorer)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
setwd("~/GitHub/SIM-Project_2")
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
library(car)
library(DataExplorer)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary(df)
# Chunk 4
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val_idx = which(sapply(df, is.numeric))
numeric_val = names(df)[numeric_val_idx]
# So the remaining will be categorical features.
categoric_val_idx = which(sapply(df, is.factor))
categoric_val = names(df)[categoric_val_idx]
# Chunk 5
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# Chunk 6
# Discretize numerical variables
<<<<<<< HEAD
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
library(car)
library(DataExplorer)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary(df)
# Chunk 4
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val_idx = which(sapply(df, is.numeric))
numeric_val = names(df)[numeric_val_idx]
# So the remaining will be categorical features.
categoric_val_idx = which(sapply(df, is.factor))
categoric_val = names(df)[categoric_val_idx]
# Chunk 5
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# Chunk 6
# Discretize numerical variables
# tenure
df$c.tenure <- df$tenure
m.tenure <- summary(df$tenure)[6]
df$c.tenure <- replace(df$c.tenure, df$tenure <= m.tenure/4, m.tenure/4)
for (i in 1:3) {
idx <- (m.tenure*i/4 < df$tenure) & (df$tenure <= m.tenure*(i+1)/4)
df$c.tenure <- replace(df$c.tenure, idx, m.tenure*(i+1)/4)
}
summary(df$tenure)[1]
breakpts <- seq(m.tenure/4, m.tenure, m.tenure/4); breakpts
df$c.tenure <- factor(df$c.tenure, labels = c("(-1,18]", "(18,36]",
"(36,54]", "(54,72]"))
summary(df$c.tenure)
par(mfrow=c(1,2))
plot(df$c.tenure, main = "Barplot of df$c.tenure")
hist(df$tenure)
# Chunk 7
# TotalCharges
df$c.TotalCharges <- df$TotalCharges
m.TotalCharges <- summary(df$TotalCharges)[6]
df$c.TotalCharges <- replace(df$c.TotalCharges, df$TotalCharges <= m.TotalCharges/4, m.TotalCharges/4)
for (i in 1:3) {
idx <- (m.TotalCharges*i/4 < df$TotalCharges) & (df$TotalCharges <=
m.TotalCharges*(i+1)/4)
df$c.TotalCharges <- replace(df$c.TotalCharges, idx, m.TotalCharges*(i+1)/4)
}
summary(df$TotalCharges)[1]
breakpts <- seq(m.TotalCharges/4, m.TotalCharges, m.TotalCharges/4); breakpts
df$c.TotalCharges <- factor(df$c.TotalCharges, labels = c("(18,2171]",
"(2171,4342]",
"(4342,6514]",
"(6514,8685]"))
summary(df$c.TotalCharges)
par(mfrow=c(1,2))
plot(df$c.TotalCharges, main = "Barplot of df$c.TotalCharges")
hist(df$TotalCharges)
# Chunk 8
# MonthlyCharges
df$c.MonthlyCharges <- df$MonthlyCharges
m.MonthlyCharges <- summary(df$MonthlyCharges)[6]
df$c.MonthlyCharges <- replace(df$c.MonthlyCharges, df$MonthlyCharges <= m.MonthlyCharges/4, m.MonthlyCharges/4)
for (i in 1:3) {
idx <- (m.MonthlyCharges*i/4 < df$MonthlyCharges) & (df$MonthlyCharges <=
m.MonthlyCharges*(i+1)/4)
df$c.MonthlyCharges <- replace(df$c.MonthlyCharges, idx,
m.MonthlyCharges*(i+1)/4)
}
summary(df$MonthlyCharges)[1]
breakpts <- seq(m.MonthlyCharges/4, m.MonthlyCharges, m.MonthlyCharges/4)
breakpts
df$c.MonthlyCharges <- factor(df$c.MonthlyCharges, labels = c("(18,30.69]",
"(30.69,59.38]",
"(59.38,89.06]",
"(89.06,118.75]"))
summary(df$c.MonthlyCharges)
par(mfrow=c(1,2))
plot(df$c.MonthlyCharges, main = "Barplot of df$c.MonthlyCharges")
hist(df$MonthlyCharges)
par(mfrow=c(1,1))
# Chunk 9
hist(df$TotalCharges)
hist(df$MonthlyCharges)
par(mfrow=c(1,2))
hist(df$tenure, prob = TRUE, breaks = 10, main = 'Histogram of tenure
vs normal distribution', xlab = 'tenure')
x <- seq(min(df$tenure), max(df$tenure), by = .1)
y <- dnorm(x, mean = mean(df$tenure), sd = sd(df$tenure))
plot(x,y, xlab = 'tenuere', ylab = '')
hist(df$TotalCharges, prob = TRUE, breaks = 10, main = 'Hist totalCharges
vs normal distribution', xlab = 'TotalCharges')
x <- seq(min(df$TotalCharges, na.rm = TRUE), max(df$TotalCharges, na.rm = TRUE),
by = 10)
y <- dnorm(x, mean = mean(df$TotalCharges, na.rm = TRUE), sd = sd(df$TotalCharges, na.rm = TRUE))
plot(x,y, xlab = 'TotalCharges', ylab = '')
hist(df$MonthlyCharges, prob = TRUE, breaks = 10, main = 'Hist MonthlyCharges
vs normal distribution', xlab = 'df$MonthlyCharges')
x <- seq(min(df$MonthlyCharges, na.rm = TRUE), max(df$MonthlyCharges, na.rm = TRUE),
by = .1)
y <- dnorm(x, mean = mean(df$MonthlyCharges, na.rm = TRUE), sd = sd(df$MonthlyCharges, na.rm = TRUE))
plot(x,y, xlab = 'df$MonthlyCharges', ylab = '')
par(mfrow=c(1,1))
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
library(car)
library(DataExplorer)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary(df)
# Chunk 4
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val_idx = which(sapply(df, is.numeric))
numeric_val = names(df)[numeric_val_idx]
# So the remaining will be categorical features.
categoric_val_idx = which(sapply(df, is.factor))
categoric_val = names(df)[categoric_val_idx]
# Chunk 5
# SeniorCitizen represents a qualitative concept, so we convert it to factor
df$SeniorCitizen <- factor(df$SeniorCitizen, labels = c("Yes", "No"))
# Chunk 6
# Discretize numerical variables
# tenure
df$c.tenure <- df$tenure
m.tenure <- max(df$tenure, na.rm = TRUE)
df$c.tenure <- replace(df$c.tenure, df$tenure <= m.tenure/4, m.tenure/4)
for (i in 1:3) {
idx <- (m.tenure*i/4 < df$tenure) & (df$tenure <= m.tenure*(i+1)/4)
df$c.tenure <- replace(df$c.tenure, idx, m.tenure*(i+1)/4)
}
min(df$tenure, na.rm = TRUE)
breakpts <- seq(m.tenure/4, m.tenure, m.tenure/4); breakpts
df$c.tenure <- factor(df$c.tenure, labels = c("(-1,18]", "(18,36]",
"(36,54]", "(54,72]"))
summary(df$c.tenure)
par(mfrow=c(1,2))
plot(df$c.tenure, main = "Barplot of df$c.tenure")
hist(df$tenure)
# Chunk 7
# TotalCharges
df$c.TotalCharges <- df$TotalCharges
m.TotalCharges <- max(df$TotalCharges, na.rm = TRUE)
df$c.TotalCharges <- replace(df$c.TotalCharges, df$TotalCharges <= m.TotalCharges/4, m.TotalCharges/4)
for (i in 1:3) {
idx <- (m.TotalCharges*i/4 < df$TotalCharges) & (df$TotalCharges <=
m.TotalCharges*(i+1)/4)
df$c.TotalCharges <- replace(df$c.TotalCharges, idx, m.TotalCharges*(i+1)/4)
}
min(df$TotalCharges, ra.rm = TRUE)
breakpts <- seq(m.TotalCharges/4, m.TotalCharges, m.TotalCharges/4); breakpts
df$c.TotalCharges <- factor(df$c.TotalCharges, labels = c("(18,2171]",
"(2171,4342]",
"(4342,6514]",
"(6514,8685]"))
summary(df$c.TotalCharges)
par(mfrow=c(1,2))
plot(df$c.TotalCharges, main = "Barplot of df$c.TotalCharges")
hist(df$TotalCharges)
# Chunk 8
# MonthlyCharges
df$c.MonthlyCharges <- df$MonthlyCharges
m.MonthlyCharges <- max(df$MonthlyCharges, na.rm = TRUE)
df$c.MonthlyCharges <- replace(df$c.MonthlyCharges, df$MonthlyCharges <= m.MonthlyCharges/4, m.MonthlyCharges/4)
for (i in 1:3) {
idx <- (m.MonthlyCharges*i/4 < df$MonthlyCharges) & (df$MonthlyCharges <=
m.MonthlyCharges*(i+1)/4)
df$c.MonthlyCharges <- replace(df$c.MonthlyCharges, idx,
m.MonthlyCharges*(i+1)/4)
}
min(df$MonthlyCharges, na.rm = TRUE)
breakpts <- seq(m.MonthlyCharges/4, m.MonthlyCharges, m.MonthlyCharges/4)
breakpts
df$c.MonthlyCharges <- factor(df$c.MonthlyCharges, labels = c("(18,30.69]",
"(30.69,59.38]",
"(59.38,89.06]",
"(89.06,118.75]"))
summary(df$c.MonthlyCharges)
par(mfrow=c(1,2))
plot(df$c.MonthlyCharges, main = "Barplot of df$c.MonthlyCharges")
hist(df$MonthlyCharges)
par(mfrow=c(1,1))
hist(df$TotalCharges)
hist(df$MonthlyCharges)
par(mfrow=c(1,2))
hist(df$tenure, prob = TRUE, breaks = 10, main = 'Histogram of tenure
vs normal distribution', xlab = 'tenure')
x <- seq(min(df$tenure), max(df$tenure), by = .1)
y <- dnorm(x, mean = mean(df$tenure), sd = sd(df$tenure))
plot(x,y, xlab = 'tenuere', ylab = '')
hist(df$TotalCharges, prob = TRUE, breaks = 10, main = 'Hist totalCharges
vs normal distribution', xlab = 'TotalCharges')
x <- seq(min(df$TotalCharges, na.rm = TRUE), max(df$TotalCharges, na.rm = TRUE),
by = 10)
y <- dnorm(x, mean = mean(df$TotalCharges, na.rm = TRUE), sd = sd(df$TotalCharges, na.rm = TRUE))
plot(x,y, xlab = 'TotalCharges', ylab = '')
hist(df$MonthlyCharges, prob = TRUE, breaks = 10, main = 'Hist MonthlyCharges
vs normal distribution', xlab = 'df$MonthlyCharges')
x <- seq(min(df$MonthlyCharges, na.rm = TRUE), max(df$MonthlyCharges, na.rm = TRUE),
by = .1)
y <- dnorm(x, mean = mean(df$MonthlyCharges, na.rm = TRUE), sd = sd(df$MonthlyCharges, na.rm = TRUE))
plot(x,y, xlab = 'df$MonthlyCharges', ylab = '')
par(mfrow=c(1,1))
hist(df$tenure, prob = TRUE, breaks = 10, main = 'Histogram of tenure
vs normal distribution', xlab = 'tenure')
plot(x,y, xlab = 'tenuere', ylab = '')
par(mfrow=c(1,2))
hist(df$tenure, prob = TRUE, breaks = 10, main = 'Histogram of tenure
vs normal distribution', xlab = 'tenure')
x <- seq(min(df$tenure), max(df$tenure), by = .1)
y <- dnorm(x, mean = mean(df$tenure), sd = sd(df$tenure))
plot(x,y, xlab = 'tenuere', ylab = '')
hist(df$TotalCharges, prob = TRUE, breaks = 10, main = 'Hist totalCharges
vs normal distribution', xlab = 'TotalCharges')
x <- seq(min(df$TotalCharges, na.rm = TRUE), max(df$TotalCharges, na.rm = TRUE),
by = 10)
y <- dnorm(x, mean = mean(df$TotalCharges, na.rm = TRUE), sd = sd(df$TotalCharges, na.rm = TRUE))
plot(x,y, xlab = 'TotalCharges', ylab = '')
summary(df$tenure)

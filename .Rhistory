# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls"); summary (df)
str(df)
# The data has customerID and Churn, both should be removed from the traning set for the modelling.
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
# Remove the ID and target
categoric_val = categoric_val[-c(1,21,numeric_val)]
df$Churn = as.factor(df$Churn)
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls"); summary (df)
str(df)
# The data has customerID should be removed from the traning set for the modelling.
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
# Remove the ID and target
categoric_val = categoric_val[-c(1,numeric_val)]
df$Churn = as.factor(df$Churn)
str(df)
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary (df)
View(df)
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
# Remove the ID and target
categoric_val = categoric_val[-c(1,numeric_val)]
df[numeric_val] = lapply(df[numeric_val], as.numeric)
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary (df)
# Chunk 4
# The data has customerID should be removed from the traning set for the modelling.
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
# Remove the ID and target
categoric_val = categoric_val[-c(1,numeric_val)]
# Chunk 1
# Clean the workspace
if(!is.null(dev.list())) dev.off()
rm(list = ls())
# Chunk 2
# Import the libraries
library(dplyr)
# Chunk 3
# Import the dataset
df = read.csv("WA_Fn-UseC_-Telco-Customer-Churn.xls",header=T, sep=",",
stringsAsFactors=TRUE)
str(df)
summary (df)
# Chunk 4
# The data has customerID should be removed from the traning set for the modelling.
# The only numerical features that we have are tenure, MonthlyCharges and TotalChages.
numeric_val = c(6, 19, 20)
# So the remaining will be categorical feature.
categoric_val = c(names(df))
# Remove the ID and target
categoric_val = categoric_val[-c(1,numeric_val)]
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
sapply(select(df, numeric_val), table)
select(df, numeric_val)
?select
# Let's check the distribution of the numeric variables in order to discretize
# them in factors.
sapply(select(df, numeric_val), table)
hist(df$tenure)
hist(df$TotalCharges)
hist(df$MonthlyCharges)
hist(df$TotalCharges)
summary(df)
sapply(df, is.missing())
sapply(df, is.na())
sapply(df, is.na
sapply(df, is.na)
sapply(df, is.na)
sapply(df, names(df),is.na)
tapply(df, names(df),is.na)
tapply(df, is.na)
sapply(df, is.na)
sum(sapply(df, is.na))
apply(df,2, is.na)
apply(sapply(df, is.na), 2, sum)
summary(df)
# Checking the overall data quality, there is only 11 missing from TotalCharges.
df[which(is.na(df$TotalCharges)),]
# Checking the overall data quality, there is only 11 missing from TotalCharges.
df[which(is.na(df$TotalCharges)),]
which(is.na(df$TotalCharges)) == which(df$tenure == 0)
length(which(df$tenure == 0))
count(which(is.na(df$TotalCharges))) == count(which(df$tenure == 0))
sum(which(is.na(df$TotalCharges))) == sum(which(df$tenure == 0))
df$TotalCharges[which(is.na(df$TotalCharges))] = 0
# We can check if there is any inconsistency in total charges.
# First, let's compute the expected total charges as product of monthly charges
# and tenure
expected_total_charges = df$MonthlyCharges * df$tenure
# Then plot it in a linear regression model, where we can see that there are no
# outliers.
plot(expected_total_charges, df$TotalCharges)
